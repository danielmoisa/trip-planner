name: Build & Test

on:
  push:
    branches: "**"
  pull_request:
    branches: [master]

env:
  DOCKER_ENV_FILE: ".github/workflows/docker.env"

permissions:
  contents: read
  security-events: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.4-alpine
        env:
          POSTGRES_DB: "development"
          POSTGRES_USER: "dbuser"
          POSTGRES_PASSWORD: "dbpass"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      integresql:
        image: allaboutapps/integresql:latest
        env:
          PGHOST: "postgres"
          PGUSER: "dbuser"
          PGPASSWORD: "dbpass"
      mailhog:
        image: mailhog/mailhog

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Docker build (target builder)
        run: docker build --target builder --file Dockerfile --tag allaboutapps.dev/aw/go-starter:builder-${GITHUB_SHA} .
      - name: Docker build (target app)
        run: docker build --target app --file Dockerfile --tag allaboutapps.dev/aw/go-starter:app-${GITHUB_SHA} .
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "allaboutapps.dev/aw/go-starter:app-${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true
      - name: Docker run (target builder)
        run: docker run -d --env-file $DOCKER_ENV_FILE --network "${{ job.services.postgres.network }}" --name=builder -it allaboutapps.dev/aw/go-starter:builder-${GITHUB_SHA}
      - name: Build & diff
        run: |
          docker exec builder make tidy
          docker exec builder make build
          docker cp builder:/app ./post-build && rm -rf ./post-build/.git && git -C post-build diff --exit-code
      - name: Test
        run: docker exec builder make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
      - name: Test scripts
        if: ${{ github.repository == 'allaboutapps/go-starter' }}
        run: docker exec builder make test-scripts
      - name: Info
        run: docker exec builder make info
      - name: Binary deps
        run: docker exec builder bash -c 'make get-embedded-modules-count && make get-embedded-modules'
      - name: Binary licenses
        run: docker exec builder make get-licenses
      - name: Docker run (target app)
        run: |
          docker run --env-file $DOCKER_ENV_FILE --network "${{ job.services.postgres.network }}" allaboutapps.dev/aw/go-starter:app-${GITHUB_SHA} help
          docker run --env-file $DOCKER_ENV_FILE --network "${{ job.services.postgres.network }}" allaboutapps.dev/aw/go-starter:app-${GITHUB_SHA} -v
          docker run --env-file $DOCKER_ENV_FILE --network "${{ job.services.postgres.network }}" allaboutapps.dev/aw/go-starter:app-${GITHUB_SHA} env
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
      - name: Stop container
        if: always()
        run: docker stop builder
      - name: Remove container
        if: always()
        run: docker rm builder

  swagger-codegen-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Validate Swagger
        uses: docker://swaggerapi/swagger-codegen-cli:latest
        with:
          args: validate -i ./api/swagger.yml
